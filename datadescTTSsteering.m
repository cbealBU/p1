function DataDescriptionUser=datadescTTSsteering
% DataDescriptionRacing.m
%
% This file creates a description of the data that will get logged by
% the p1.mdl model.  This file is automatically run when the model is
% opened.  The variable DataDescriptionMPCEnv should be stored along with the
% data and DataDescriptionMPCEnv when it is saved, as is done automatically by the script savedata.m.
%
% This makes it possible for post-processing scripts to automatically know
% what signals are in a particular data file and how to use them.  It also
% helps humans remember what's what after a couple of months go by.
%
% Modified by Craig on Oct 27, 09
% Now have 2 data description blocks.  This second block is for debug
% variables for the MPC envelope controller.


DataDescriptionUser = struct([]);

ii=1;
DataDescriptionUser(ii).name='mapMatchP1';
DataDescriptionUser(ii).size=22;
DataDescriptionUser(ii).units={'units go here'};
DataDescriptionUser(ii).desc='e deltaPsi curvature finalSeg dst2end segNum segL segKstart segKend segProg segMaxV segFricCoef segGrade segBank segType segModType numIters iterFlag resError mapMatchFlag dstAlongPath zError';
% 
% DataDescription(ii).vars= {          {'e'                           'm'         'lateral error from the path'} ...
%                                      {'deltaPsi'                    'rad'       'heading error from the path'} ...
%                                      {'curvature'                   '1/m'       'curvature of the path at current location'} ...
%                                      {'finalSeg'                    'boolean'   'last segment of open map flag'} ...
%                                      {'dst2end'                     'm'         'distance to end of open map'} ...
%                                      ...
%                                      {'segNumber'                   'number'    'current segment: number'} ...
%                                      {'currSegLng'                  'm'         'current segment: length'} ...
%                                      {'currCrvI'                    '1/m'       'current segment: initial curvature'} ...
%                                      {'currCrvF'                    '1/m'       'current segment: final curvature'} ...
%                                      {'currSegProg'                 'm'         'current segment: distance along'} ...
%                                      {'currMaxV'                    'm/s'       'current segment: maximum velocity'} ...
%                                      {'currFricCoef'                'number'    'current segment: friction coef'} ...
%                                      {'currGrade'                   'rad'       'current segment: grade angle'} ...
%                                      {'currBank'                    'rad'       'current segment: bank angle'} ...
%                                      {'segType'                     'number'    'current segment: segment type'} ...
%                                      {'currSegModType'              'number'    'current segment: type of map modification, 0 means original map'} ...
%                                      ...
%                                      {'numIters'                    'number'    'debug: number of iterations'} ...
%                                      {'iterFlag'                    'boolean'   'debug: hit the iterations limit flag'} ...
%                                      {'resError'                    'm'         'debug: residual error'} ...
%                                      {'mapMatchFlag'                'boolean'   'debug: map-matching enable flag'} ...
%                                      {'dstAlongPath'                'm'         'debug: distance along total path'} ...
%                                      {'zError'                      'm'         'debug: z-dimension error'} };                                     


ii=ii+1;
DataDescriptionUser(ii).name='steering';
DataDescriptionUser(ii).size=11;
DataDescriptionUser(ii).units={'m/s' 'rad/s' 'm/s' 'rad' 'm' 'm' '-' 'rad' 'rad'};
DataDescriptionUser(ii).desc='Contains in order: rawDeltaCmd FBsteeringDeltaPsiDot steeringCmdSS FFW_Fyf UyEst rEst LK_FBforce dPsiDotFBforce eCopDotFBforce UySim rSim';

% DataDescriptionTTSracing(ii).vars= { {'rawDeltaCmd'                 'rad'       'steering command at road wheel before saturation block, see the one after saturation block in the High level signal'} ...
%                                      {'FBsteeringDeltaPsiDot'       'rad'       'Feedback steering command at road wheel from lane keeping'} ...
%                                      {'steeringCmdSS'               'rad'       'Total steering command, using state space'} ...
%                                      {'FFW_FyF'                     'N'         'Feedforward steering force'} ...
%                                      {'UyEst'                       'm/s'       'Uy from bike model NOTE: sideSlipSim for ME227Lab BLOCK!!! - these modified so from observer 6-28-12'} ...
%                                      {'rEst'                        'rad/s'     'yawRate from bike model - these modified so from observer 6-28-12'} ...
%                                      {'LK_FBforce'                  'N'         'Feedback force from lanekeeping'} ...
%                                      {'dPsiDotFBforce'              'N'         'Feedback force from delta psi dot'} ...
%                                      {'eCopDotFBforce'              'N'         'Feedback force from ela dot'} ...
%                                      {'UySim'                       'm/s'       'simulated lateral velocity'} ...
%                                      {'rSim'                        'rad/s'     'simulated yaw rate'} };  


ii=ii+1;
DataDescriptionUser(ii).name='longitudinal';
DataDescriptionUser(ii).size=2;
DataDescriptionUser(ii).units={'m/s' 'm/s'};
DataDescriptionUser(ii).desc='UxDesired axDesired';

% DataDescriptionTTSracing(ii).vars= { {'FBforce'                     'N'         'Feedback force from the speed controller'} ...
%                                      {'throttleCmd'                 '%'         'throttle command before saturation block'} ...
%                                      {'brakeCmd'                    'bar'       'brake command before saturation block'} ...
%                                      {'axDesired'                   'm/s^2'     'Feedforward acceleration'} ...
%                                      {'FFWforce'                    'N'         'Feedforward longitudinal force Fx'} ...
%                                      {'FFWdragFx'                   'N'         'longitudinal drag'} ...
%                                      {'UxDesired'                   'm/s'       'Desired Speed'} };
