#define MPC_SFUN

/* Standard prologue */

#include <stdlib.h>
#include <math.h>

/* #include "util.h" */
#include "simstruc.h"
#include "dantzgmp.h"
/* #include "matrix.h" */ /* needed by mxGetLogicals */
#include "H_mat_macros.h"

/* Required for alloca to work*/
#if defined(__GNUC__)
#include <alloca.h>
#endif

/* Required for alloca to work*/
#if defined(__hpux) && ~defined __FAST_THREADS
#include <alloca.h>
#endif

/* Required for alloca to work*/
#if (defined(sun) || defined(__sun)) && \
    (defined(__SUNPRO_C) || defined(__SUNPRO_CC))
#include <alloca.h>
#endif

/* Required for alloca to work */
#if defined(__WIN32__) || defined(WIN32) || defined(_WIN32) || \
    defined(_MSC_VER)
    #include <malloc.h>
    #ifndef RT
        #define alloca(x) _alloca(x)
    #endif
#endif

#ifdef RT
/* We are being built using RTW */
/* avoid debug messages */
	#ifdef DEBUG
		#undef DEBUG
	#endif
#endif

/* Merge dantzgmp source */
#include "dantzgmp_solver.c"  /* this will be trasformed to INLINE code */

/* Parameter access macros */

/* Model parameters - Generated by the mpcinit.m initialization routine
   Expected to be initialized and stored in the workspace at compile time
*/

#define p_Ts(S)               ssGetSFcnParam(S,0)
#define p_A(S)                 ssGetSFcnParam(S,1)
#define p_B(S)                 ssGetSFcnParam(S,2)
#define p_G(S)                ssGetSFcnParam(S,3)
#define p_cofSVE(S)      ssGetSFcnParam(S,4)
#define p_cofSDE(S)      ssGetSFcnParam(S,5)
#define p_H(S)                 ssGetSFcnParam(S,6)
#define p_Mctrl(S)            ssGetSFcnParam(S,7)
#define p_T_u1(S)             ssGetSFcnParam(S,8)
#define p_MT(S)              ssGetSFcnParam(S,9)
#define p_Umax(S)          ssGetSFcnParam(S,10)
#define p_Umin(S)            ssGetSFcnParam(S,11)
#define p_dUmax(S)          ssGetSFcnParam(S,12)
#define p_dUmin(S)           ssGetSFcnParam(S,13) 
#define p_Ymax_P(S)        ssGetSFcnParam(S,14) 
#define p_Ymin_P(S)         ssGetSFcnParam(S,15) 
#define p_Dsafe(S)           ssGetSFcnParam(S,16) 
#define p_Tsafe(S)           ssGetSFcnParam(S,17) 
#define p_Xmin(S)             ssGetSFcnParam(S,18) 
#define p_aH(S)                 ssGetSFcnParam(S,19) 
#define p_Hinv(S)               ssGetSFcnParam(S,20)
#define p_TAB(S)               ssGetSFcnParam(S,21)
#define p_maxIter(S)             ssGetSFcnParam(S,22)
#define p_A_cstrXmin(S)        ssGetSFcnParam(S,23)
#define p_AHaH(S)                ssGetSFcnParam(S,24)
#define p_AHS_uS_x(S)        ssGetSFcnParam(S,25)
#define p_AHS_uSu1(S)        ssGetSFcnParam(S,26)
#define p_AHS_uHv(S)          ssGetSFcnParam(S,27)
#define p_AHS_uSeH(S)       ssGetSFcnParam(S,28)
#define p_AHTduTu1(S)        ssGetSFcnParam(S,29)
#define p_MYS_x(S)             ssGetSFcnParam(S,30)
#define p_MYSu1(S)             ssGetSFcnParam(S,31)
#define p_MYHv(S)               ssGetSFcnParam(S,32)
#define p_MYSeH(S)            ssGetSFcnParam(S,33)
#define p_AsS_x(S)              ssGetSFcnParam(S,34)
#define p_AsSu1(S)              ssGetSFcnParam(S,35)
#define p_AsHv(S)                ssGetSFcnParam(S,36)
#define p_AsSeH(S)             ssGetSFcnParam(S,37)
#define p_AyS_x(S)             ssGetSFcnParam(S,38)
#define p_AySu1(S)             ssGetSFcnParam(S,39)
#define p_AyHv(S)             ssGetSFcnParam(S,40)
#define p_AySeH(S)             ssGetSFcnParam(S,41)
#define p_AuTu1(S)             ssGetSFcnParam(S,42)
#define p_S_uS_x(S)             ssGetSFcnParam(S,43)
#define p_S_uSu1(S)             ssGetSFcnParam(S,44)
#define p_S_uHv(S)             ssGetSFcnParam(S,45)
#define p_S_uSeH(S)             ssGetSFcnParam(S,46)
#define p_TduTu1(S)             ssGetSFcnParam(S,47)

/* Work variables and state access macros */
#define NPWORK 1
#define NPARAMS 48
#define INPUTNUM 4
#define OUTPUTNUM 2
#define uNum 1
#define xNum 3
#define yNum 3
#define vNum 1

/* Parameter error message */
#define param_MSG "Parameter number mismatch"
